/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
    const getMax = (root) =>
    {
        if (root == null)
        {
            return 0;
        }
        return 1 + Math.max(getMax(root.left),getMax(root.right));
    }
   var diameterOfBinaryTree = function(root) {
       if(root == null)
       {
           return 0;
       }
       let left = getMax(root.left);
       let right = getMax(root.right);
       
       let lld = diameterOfBinaryTree(root.left);
       let rrd = diameterOfBinaryTree(root.right);
       
       return Math.max(left + right, Math.max(lld,rrd))
     
};
    
